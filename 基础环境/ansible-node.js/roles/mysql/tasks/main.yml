---

- name: Install MySQL official Repo
  yum: name=https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm state=latest

- name: Disable Defaule Version
  command: yum-config-manager --disable mysql57-community

- name: Enable MySQL{{ mysqlver }} version
  command: yum-config-manager --enable mysql{{ mysqlver }}-community


- name: Install MySQL{{ mysqlver }}
  yum: name=mysql-community-server state=latest

- name: Create Databases Directory
  file:
    path: /data/mysql
    state: directory
    owner: mysql
    group: mysql

- name: Get MySQL Version
  command: mysql -V
  register: mysql_version
  

- name: Copy MySQL{{mysqlver}} Configuration
  template: src=my.cnf.jinja2 dest=/etc/my.cnf
  notify: restart MySQL

- name: Start MySQL{{mysqlver}} Service
  service: name=mysqld state=started enabled=yes
  
- name: MySQL{{mysqlver}} password policy
  lineinfile:
    path: /etc/my.cnf
    regexp: '#validate_password = off'
    line: 'validate_password = off'
  when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)

- name: Restart MySQL{{mysqlver}} Service
  service: name=mysqld state=restarted enabled=yes
  when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)

 
- name: Get temporary MySQL57+ root password
  shell: grep 'A temporary password is generated for root@localhost:' /var/log/messages | awk '{print $NF}'
  register: mysql_root_temp_password
  when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)


# - name: Set MySQL57+ Password policy 
#   command: mysql -uroot --password="{{ mysql_root_temp_password.stdout }}" --connect-expired-password -e "set global validate_password_policy=0;set global validate_password_length=4;"
#   when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)

- name: Change MySQL57+ root user password 
  shell: mysqladmin -u root --password="{{ mysql_root_temp_password.stdout }}" password "{{mysql_password}}"
  when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)


- name: Change MySQL{{ mysqlver }} root user password 
  mysql_user: 
    name: root 
    host: "{{ item }}" 
    password: "{{mysql_password}}"
  with_items:
    - 127.0.0.1
    - ::1
    - localhost
  when: (mysql_version.stdout.find('5.5') != -1) or (mysql_version.stdout.find('5.6') != -1)


- name: Removes all anyelse user accounts
  mysql_user:
    login_user: root
    login_password: "{{mysql_password}}"
    name: ''
    host_all: yes
    state: absent

- name: Remove hostname user accounts
  mysql_user: login_user=root login_password={{mysql_password}} name='root' host={{ ansible_nodename }} state=absent


- name: Removes test Databases
  mysql_db:
    login_user: root
    login_password: "{{mysql_password}}"
    name: test
    state: absent

- name: Removing privileges on test database
  command: mysql -uroot -p{{mysql_password}} -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'"

- name: FLUSH PRIVILEGES
  command: mysql -uroot -p{{mysql_password}} -e "FLUSH PRIVILEGES"


- name: enable remote access
  mysql_user: 
    login_user: root 
    login_password: "{{mysql_password}}"
    name: root
    host: '%'
    password: "{{mysql_password}}"
    priv: '*.*:ALL'
  when: remote 

- name: Create credentials Folder
  file:
    path: /credentials
    state: directory

- name: Create Password doc
  file:
    path: /credentials/password.txt
    mode: 644
    state: touch

- name: Write Databases Password
  shell: echo -e 'MySQL username:root\nMySQL password:'{{mysql_password}}  > /credentials/password.txt

- name: Databases Random Password
  copy: 
    src: init-57.sh
    dest: /root/init.sh
    mode: 0750
  when: (mysql_version.stdout.find('5.7') != -1) or (mysql_version.stdout.find('8.0') != -1)


- name: Databases Random Password
  copy: 
    src: init-56.sh
    dest: /root/init.sh
    mode: 0750
  when: (mysql_version.stdout.find('5.5') != -1) or (mysql_version.stdout.find('5.6') != -1)

- name: Setting Startup
  lineinfile:
    path: /etc/rc.d/rc.local
    regexp: '/root/init.sh'
    line: '/root/init.sh'
    mode: 0750

- name: Remove SSH info
  file: 
    path: '{{item}}'
    state: absent
  with_items:
    - /home/{{admin_username}}/.ssh
    - /root/.ssh