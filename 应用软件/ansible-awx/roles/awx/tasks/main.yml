- block:
  ## 系统更新
  - name: System Update
    yum: 
      name: "*"
      state: latest

  - name: Add AWX repository
    yum_repository:
      name: AWX
      description: Copr repo for awx owned by mrmeee
      baseurl: https://copr-be.cloud.fedoraproject.org/results/mrmeee/ansible-awx/epel-7-x86_64/01067274-ansible-awx/
      gpgcheck: yes
      gpgkey: https://copr-be.cloud.fedoraproject.org/results/mrmeee/ansible-awx/pubkey.gpg
      enabled: yes
      skip_if_unavailable: yes
      repo_gpgcheck: no

  - name: Add Erlang repository
    yum_repository:
      name: erlang-solutions
      description: Centos $releasever - $basearch - Erlang Solutions
      baseurl: http://packages.erlang-solutions.com/rpm/centos/$releasever/$basearch
      gpgcheck: yes
      gpgkey: http://packages.erlang-solutions.com/debian/erlang_solutions.asc
      enabled: yes

  - name: Add rabbitMQ repository
    yum_repository:
      name: rabbitMQ
      description: rabbitMQ repository
      baseurl: https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/el/{{ansible_distribution_major_version}}/
      gpgcheck: yes
      gpgkey: https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
      enabled: yes

  - name: Add Nginx repository
    yum_repository:
      name: Nginx
      description: nginx repo
      baseurl: http://nginx.org/packages/centos/{{ansible_distribution_major_version}}/$basearch/
      gpgcheck: no
      enabled: yes


  # 安装 EPEL
  - name: Install EPEL
    yum:
      name: [epel-release ,sshpass]
      state: latest

  - name: Install Erlang
    yum:
      name: erlang

  - name: Install rabbitMQ rpm
    yum:
      name: rabbitmq-server

  - name: Install  memcached
    yum:
      name: [memcached]
      state: present

  - name: Install AWX
    yum: 
      name: awx
      state: present

  - name: Get postgresql Password
    shell: cat /credentials/password.txt | awk 'NR==2' |awk -F ":" '{print $2}'
    register: postgresql_password

  # - debug: var=postgresql_password.stdout

  - name: create databases for awx
    postgresql_db:
      login_host: 127.0.0.1
      login_user: postgres
      login_password: "{{postgresql_password.stdout}}"
      name: awx

  - name: create the postgresql user for awx
    postgresql_user:
      login_host: 127.0.0.1
      login_user: postgres
      login_password: "{{postgresql_password.stdout}}"
      name: awx
      db: awx
      role_attr_flags: SUPERUSER

  - name: restart rabbitmq
    service: 
      name: rabbitmq-server
      state: started
      enabled: yes


  # Configure AWX
  - name: Import Database Data
    shell:
      sudo -u awx /opt/awx/bin/awx-manage migrate

  - name: Initial configuration of AWX -1
    shell: echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'root@localhost', 'admin')" | sudo -u awx /opt/awx/bin/awx-manage shell

  - name: Initial configuration of AWX -2
    shell: 
      sudo -u awx /opt/awx/bin/awx-manage create_preload_data
  - name: Initial configuration of AWX -3
    shell:
      sudo -u awx /opt/awx/bin/awx-manage provision_instance --hostname=$(hostname)
  - name: Initial configuration of AWX -4
    shell: 
      sudo -u awx /opt/awx/bin/awx-manage register_queue --queuename=tower --hostnames=$(hostname)


  - name: check hostname
    shell: |
      echo 'sudo -u awx /opt/awx/bin/awx-manage provision_instance --hostname=$(hostname)' >> /etc/rc.local
      echo 'sudo -u awx /opt/awx/bin/awx-manage register_queue --queuename=tower --hostnames=$(hostname)' >> /etc/rc.local

  # Install nginx

  - name: Install Nginx
    yum: 
      name: nginx
      state: latest

  - name: replace nginx.conf
    copy:
      src: nginx.conf.j2
      dest: /etc/nginx/nginx.conf

  - name: Create /var/lib/awx/.ssh diretory
    file:
      path: /var/lib/awx/.ssh
      state: directory
      mode: 0755

  - name: Add awx config to solve known_hosts problem
    template:
        src: config
        dest: /var/lib/awx/.ssh/config
        owner: root
        group: root
        mode: 0644

  - name: restart nginx
    service: 
      name: nginx
      state: started
      enabled: yes

  - name: restart awx-cbreceiver
    service: 
      name: awx-cbreceiver
      state: started
      enabled: yes

  - name: restart awx-dispatcher
    service: 
      name: awx-dispatcher
      state: started
      enabled: yes

  - name: restart awx-channels-worker
    service: 
      name: awx-channels-worker
      state: started
      enabled: yes

  - name: restart awx-daphne
    service: 
      name: awx-daphne
      state: started
      enabled: yes

  - name: restart awx-web
    service: 
      name: awx-web
      state: started
      enabled: yes
  
  when: ansible_distribution == 'CentOS'


- debug: msg='AWS Need Centos Distribution'
  when: ansible_distribution != 'CentOS'

