- name: Install openjdk
  apt:
    name: openjdk-11-jdk

- name: Create metabase User
  user:
    name: metabase
    shell: /usr/sbin/nologin
    home: /data/wwwroot/metabase
    create_home: no

- name: Create metabase directory
  file:
    path: /data/wwwroot/metabase
    state: directory
    owner: metabase
    group: metabase
    

- name: Download metabase
  get_url:
    dest: /data/wwwroot/metabase
    url: http://downloads.metabase.com/{{metabase_ver}}/metabase.jar
    owner: metabase
    group: metabase


- name: Get MySQL root Default Password
  shell: cat /credentials/password.txt | awk 'NR==2' |awk -F ":" '{print $2}'
  register: mysql_password 

- name: Create metabase database
  mysql_db:
    login_password: "{{mysql_password.stdout}}"
    login_user: root
    name: "{{metabase_db_name}}"
    collation: utf8_general_ci

- name: Create metabase database User
  mysql_user:
      login_password: "{{mysql_password.stdout}}"
      login_user: root 
      name: "{{metabase_db_user}}" 
      password: "{{metabase_db_password}}" 
      priv: '{{metabase_db_name}}.*:ALL'


- name: Set metabase config
  template:
    src: metabase.conf.jinja2
    dest: /data/wwwroot/metabase/metabase.conf
    owner: metabase
    group: metabase

- name: Setting metabase service
  copy:
    src: metabase.service
    dest: /lib/systemd/system/metabase.service

- name: Restart metabase
  service:
    name: metabase.service
    state: restarted
    enabled: yes

- name:  wait for metabase setup (about 5min)
  wait_for:
    port: 3000
    delay: 300
    timeout: 600
  

- name: set reverse porxy
  copy: 
    src: default
    dest: /etc/nginx/conf.d/default.conf

- name: restart nginx
  service: name=nginx state=restarted enabled=yes

- name: Write Databases Password
  template:
    src: password.txt.jinja2
    dest: /credentials/password.txt
    mode: 644

- name: Write rc.local
  shell: echo "#!/bin/bash" > /etc/rc.local

- name: restart rc.local
  service: name=rc.local state=restarted enabled=yes


- name: Databases Random Password
  template: 
    src: init.sh.jinja2
    dest: /root/init.sh
    mode: 0750

- name: Setting Startup
  lineinfile:
    path: /etc/rc.local
    regexp: '/root/init.sh'
    line: '/root/init.sh'
    mode: 0750